{"version":3,"sources":["logo2.svg","images/earring_opal.jpg","images/chain_gold_red.jpg","images/chain_rainbow.jpg","serviceWorker.ts","etsy/EtsyClient.ts","App.tsx","Shopping.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","baseUrl","apiKey","App","props","className","role","src","logo","chainGoldRed","chainRainbow","earringOpal","to","Shopping","etsyClient","getAllListings","observer","jsonp","undefined","err","data","console","error","message","onError","onSuccess","results","getImageUrl","listingId","url_570xN","getAllImageUrls","map","it","ReactDOM","render","StrictMode","exact","path","client","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,2ICYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,ICZqBC,EAAiBC,E,2ECO/BC,EAAM,SAACC,GAmClB,OACE,oCACA,4BAAQC,UAAU,iBAAiBC,KAAK,UACtC,yBAAKD,UAAU,uBAMlB,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKE,IAAKC,IAAMH,UAAU,eAE5B,yBAAKA,UAAU,4CAAf,mEAGE,uBAAGA,UAAU,oBACX,wDAML,yBAAKA,UAAU,aAEb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iBACb,yBAAKE,IAAKE,IAAcJ,UAAU,gBAGtC,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iBACb,yBAAKE,IAAKG,IAAcL,UAAU,gBAGtC,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iBACb,yBAAKE,IAAKI,IAAaN,UAAU,kBAMzC,kBAAC,IAAD,CAAMO,GAAI,aAAV,W,uBC3FOC,EAAW,WACtB,OAAO,0CCMHC,GHHqBb,EGGG,2BHHcC,EGGc,2BHoCjD,CACLa,eAtCqB,SAACC,GACtBC,IAAM,GAAD,OAAIhB,EAAJ,qBALc,UAKd,uCAA8DC,QAAUgB,GAAW,SAACC,EAAKC,GACxFD,GACFE,QAAQC,MAAMH,EAAII,SAClBP,EAASQ,WAETR,EAASS,UAAUL,EAAKM,aAiC5BC,YA5BkB,SAACC,EAAmBZ,GACtCC,IAAM,GAAD,OAAIhB,EAAJ,wBAA2B2B,EAA3B,8BAA0D1B,QAAUgB,GAAW,SAACC,EAAKC,GACxF,GAAID,EACFE,QAAQC,MAAMH,EAAII,cAElB,IACEP,EAASS,UAAUL,EAAKM,QAAQ,GAAGG,WACnC,eAsBNC,gBAdsB,SAACF,EAAmBZ,GAC1CC,IAAM,GAAD,OAAIhB,EAAJ,wBAA2B2B,EAA3B,8BAA0D1B,QAAUgB,GAAW,SAACC,EAAKC,GACpFD,GACFE,QAAQC,MAAMH,EAAII,SAClBP,EAASQ,WAETR,EAASS,UAAUL,EAAKM,QAAQK,KAAI,SAACC,GAAD,OAAaA,EAAE,oBG7B3DC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CAAKC,OAAQxB,KAEf,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,aAChB,kBAAC,EAAD,UAMRE,SAASC,eAAe,SJkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAzB,GACLD,QAAQC,MAAMA,EAAMC,c","file":"static/js/main.7d55d185.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo2.6af60701.svg\";","module.exports = __webpack_public_path__ + \"static/media/earring_opal.d77b8050.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chain_gold_red.3bbb3da6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chain_rainbow.6a9726f6.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {Listing} from \"./Listing\";\nimport jsonp from 'jsonp'\nimport {Observer} from \"./Client\";\n\nexport const SHOP_ID = '7520574';\n\nexport const EtsyClient = (baseUrl: string, apiKey: string) => {\n\n  const getAllListings = (observer: Observer<Listing[]>): void => {\n    jsonp(`${baseUrl}/v2/shops/${SHOP_ID}/listings/active.js?api_key=${apiKey}`, undefined, (err, data) => {\n      if (err) {\n        console.error(err.message);\n        observer.onError();\n      } else {\n        observer.onSuccess(data.results)\n      }\n    });\n  };\n\n  const getImageUrl = (listingId: number, observer: Observer<string>) => {\n    jsonp(`${baseUrl}/v2/listings/${listingId}/images.js?api_key=${apiKey}`, undefined, (err, data) => {\n      if (err) {\n        console.error(err.message);\n      } else {\n        try {\n          observer.onSuccess(data.results[0].url_570xN)\n        } catch {\n          //console.log('trying again', listingId)\n         // getImageUrl(listingId, observer)\n        }\n      }\n    });\n  }\n\n  const getAllImageUrls = (listingId: number, observer: Observer<string[]>) => {\n    jsonp(`${baseUrl}/v2/listings/${listingId}/images.js?api_key=${apiKey}`, undefined, (err, data) => {\n      if (err) {\n        console.error(err.message);\n        observer.onError()\n      } else {\n        observer.onSuccess(data.results.map((it: any) => it[\"url_570xN\"]))\n      }\n    });\n  }\n\n  return {\n    getAllListings,\n    getImageUrl,\n    getAllImageUrls\n  }\n}","import React, {useEffect, useState} from 'react';\nimport {Client} from \"./etsy/Client\";\nimport {Listing} from \"./etsy/Listing\";\nimport logo from \"./logo2.svg\"\nimport earringOpal from \"./images/earring_opal.jpg\"\nimport chainGoldRed from \"./images/chain_gold_red.jpg\"\nimport chainRainbow from \"./images/chain_rainbow.jpg\"\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  client: Client;\n}\n\nexport const App = (props: Props) => {\n\n  // const [listings, setListings] = useState<Listing[]>([])\n  // const [imageLookup, setImageLookup] = useState<Record<number, string>>({})\n  //\n  // useEffect(() => {\n  //   props.client.getAllListings({\n  //     onSuccess: setListings,\n  //     onError: () => {}\n  //   })\n  // }, [props.client])\n\n  // useEffect(() => {\n  //   // let i = 5\n  //   // if(!listings[i]) {\n  //   //   return\n  //   // }\n  //   const listingsNotInRecord = listings.filter((it: Listing) => (\n  //     !Object.keys(imageLookup).includes(it.listing_id.toString())\n  //   ))\n  //\n  //   for (let i = 0; i < listingsNotInRecord.length; i++) {\n  //     console.log(i)\n  //     props.client.getImageUrl(listings[i].listing_id, {\n  //       onSuccess: (url: string) => {\n  //         setImageLookup({...imageLookup, [listings[i].listing_id]: url})\n  //       },\n  //       onError: () => {\n  //       }\n  //     })\n  //   }\n  // }, [listings, props.client, imageLookup])\n\n  // console.log(imageLookup)\n\n  return (\n    <>\n    <header className=\"header fdr fac\" role=\"banner\">\n      <div className=\"container fdr fac\">\n        {/*<a href=\"/\" className=\"no-link-format\">*/}\n        {/*  <h1 className=\"mrl text-xl\">Crow's Maille</h1>*/}\n        {/*</a>*/}\n      </div>\n    </header>\n   <div className=\"container below-header\">\n     <div className=\"row\">\n       <div className=\"col-sm-8\">\n         <img src={logo} className=\"width-100\"/>\n       </div>\n       <div className=\"col-sm-4 pas mtl text-xl berkshire-swash\">\n         Handmade chain maille jewelry, inlays, patches, fidgets and more\n\n         <p className=\"lato text-l bold\">\n           <a>What is chain maille?</a>\n         </p>\n       </div>\n     </div>\n\n   </div>\n      <div className=\"container\">\n\n        <div className=\"row\">\n          <div className=\"col-sm-4\">\n            <div className=\"pad bad bradl\">\n              <img src={chainGoldRed} className=\"width-100\"/>\n            </div>\n          </div>\n          <div className=\"col-sm-4\">\n            <div className=\"pad bad bradl\">\n              <img src={chainRainbow} className=\"width-100\"/>\n            </div>\n          </div>\n          <div className=\"col-sm-4\">\n            <div className=\"pad bad bradl\">\n              <img src={earringOpal} className=\"width-100\"/>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Link to={\"/shopping\"}>shopp</Link>\n    </>\n  );\n}\n","import React from 'react'\n\nexport const Shopping = () => {\n  return <div>shopping</div>\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport { App } from './App';\nimport {EtsyClient} from \"./etsy/EtsyClient\";\nimport {HashRouter, Switch, Route} from \"react-router-dom\";\nimport {Shopping} from \"./Shopping\";\n\nconst etsyClient = EtsyClient(\"https://openapi.etsy.com\", \"5eiqbeot0sb42byvpkh463u5\")\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <App client={etsyClient}/>\n        </Route>\n        <Route exact path=\"/shopping\">\n          <Shopping/>\n        </Route>\n      </Switch>\n\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}